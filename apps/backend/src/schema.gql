# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""Thông tin metadata chung cho các response"""
type Metadata {
  """Mã trạng thái HTTP (hoặc mã lỗi tùy chỉnh)"""
  statusCode: Int!

  """Thông báo thành công hoặc lỗi"""
  message: String

  """Dấu thời gian của response"""
  timestamp: String!

  """Đường dẫn của request (nếu có)"""
  path: String
}

type File {
  id: String!
  driveFileId: String!
  originalName: String!
  mimeType: String!
  allowedUserIds: [Int!]
  isPublic: Boolean!
}

type Department {
  id: Int!
  name: String!
  description: String
  parentDepartmentId: Int
  parentDepartment: Department
  children: [Department!]
  positions: [Position!]
}

type UserPosition {
  id: Int!
  userId: Int!
  positionId: Int!
  user: User!
  position: Position!
  startDate: DateTime!
  endDate: DateTime
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Position {
  """ID chức vụ"""
  id: Int!

  """Tên chức vụ"""
  positionName: String!

  """ID phòng ban"""
  departmentId: Int!

  """Phòng ban của chức vụ"""
  department: Department!

  """Số lượng tối đa người giữ chức vụ này"""
  maxSlots: Int!
  userPositions: [UserPosition!]!

  """Số lượng người đang giữ chức vụ này"""
  currentSlotCount: Int!
}

type UnitType {
  """ID của loại đơn vị"""
  id: Int!

  """Tên của loại đơn vị"""
  typeName: String!

  """Mô tả của loại đơn vị"""
  description: String
}

type Unit {
  """ID của đơn vị"""
  id: Int!

  """Tên đơn vị"""
  unitName: String!

  """ID loại đơn vị"""
  unitTypeId: Int

  """Loại đơn vị"""
  unitType: UnitType

  """ID đơn vị cha"""
  parentUnitId: Int

  """Ngày thành lập"""
  establishmentDate: DateTime

  """Email đơn vị"""
  email: String

  """Số điện thoại đơn vị"""
  phone: String

  """Các đơn vị con"""
  childUnits: [Unit!]!

  """Đơn vị cha"""
  parentUnit: Unit
}

type Assignment {
  """ID của assignment"""
  id: Int!

  """ID người dùng được phân công"""
  userId: Int!

  """Người dùng được phân công"""
  user: User!

  """ID chức vụ của assignment"""
  positionId: Int!

  """Chức vụ của assignment"""
  position: Position!

  """ID đơn vị tổ chức của assignment"""
  unitId: Int!

  """Đơn vị tổ chức của assignment"""
  unit: Unit!
}

type UserActivity {
  """ID của hoạt động"""
  id: Int!

  """ID của người dùng"""
  userId: Int!

  """Loại hoạt động"""
  activityType: ActivityType!

  """Mô tả hoạt động"""
  description: String

  """Dữ liệu bổ sung"""
  metadata: String

  """IP address"""
  ipAddress: String

  """User agent"""
  userAgent: String

  """Thời gian tạo hoạt động"""
  createdAt: DateTime!

  """Người dùng thực hiện hoạt động"""
  user: User!
}

"""Các loại hoạt động của người dùng"""
enum ActivityType {
  LOGIN
  LOGOUT
  PROFILE_UPDATE
  PASSWORD_CHANGE
  AVATAR_UPDATE
  DOCUMENT_VIEW
  DOCUMENT_CREATE
  DOCUMENT_UPDATE
  DOCUMENT_DELETE
  TASK_ASSIGNED
  TASK_COMPLETED
  APPROVAL_REQUESTED
  APPROVAL_APPROVED
  APPROVAL_REJECTED
}

type User {
  """ID của người dùng"""
  id: Int!

  """Email của người dùng (dùng để đăng nhập)"""
  email: String!

  """Họ của người dùng"""
  lastName: String!

  """Tên của người dùng"""
  firstName: String!

  """Tài khoản còn hoạt động không?"""
  isActive: Boolean!

  """Đánh dấu người dùng đăng nhập lần đầu (để yêu cầu đổi mật khẩu)"""
  isFirstLogin: Boolean!

  """Ảnh đại diện của người dùng"""
  avatar: String

  """Danh sách vai trò của người dùng"""
  roles: [Role!]!

  """Số điện thoại của người dùng"""
  phoneNumber: String

  """Địa chỉ của người dùng"""
  address: String

  """Ngày sinh của người dùng"""
  dateOfBirth: String

  """Giới tính của người dùng"""
  gender: String

  """Chức danh của người dùng"""
  jobTitle: String

  """Mô tả về bản thân"""
  bio: String

  """Website cá nhân"""
  website: String

  """Tài khoản LinkedIn"""
  linkedin: String

  """Tài khoản Facebook"""
  facebook: String

  """Tài khoản Twitter"""
  twitter: String

  """Cho phép nhận thông báo email"""
  emailNotifications: Boolean!

  """Cho phép nhận thông báo push"""
  pushNotifications: Boolean!

  """Cho phép hiển thị thông tin công khai"""
  isProfilePublic: Boolean!

  """Thời gian đăng nhập cuối"""
  lastLoginAt: DateTime

  """Số lần đăng nhập"""
  loginCount: Int!
  assignments: [Assignment!]!

  """Thời gian tạo tài khoản"""
  createdAt: DateTime!

  """Thời gian cập nhật cuối"""
  updatedAt: DateTime!

  """Họ và tên đầy đủ của người dùng"""
  fullName: String!
  avatarFileId: Int
  avatarFile: File
  userPositions: [UserPosition!]!
  activities: [UserActivity!]!
}

"""Các vai trò của người dùng trong hệ thống"""
enum Role {
  SYSTEM_ADMIN
  UNIVERSITY_LEADER
  DEPARTMENT_HEAD
  DEPARTMENT_STAFF
  CLERK
  DEGREE_MANAGER
  BASIC_USER
}

type SignInOutput {
  accessToken: String!
  user: User!
}

type SignInResponse {
  """Dữ liệu trả về"""
  data: SignInOutput

  """Thông tin metadata của response"""
  metadata: Metadata!
}

type PageMetaDto {
  page: Int!
  take: Int!
  itemCount: Int!
  pageCount: Int!
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
}

type WorkflowInstance {
  id: Int!
  templateId: Int!
  template: WorkflowTemplate!
  documentId: Int!
  currentStepId: Int
  currentStep: WorkflowStep
  status: WorkflowStatus!
  createdByUserId: Int!
  createdByUser: User!
  notes: String
  logs: [WorkflowActionLog!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""Trạng thái của workflow instance"""
enum WorkflowStatus {
  IN_PROGRESS
  COMPLETED
  CANCELLED
  REJECTED
}

type WorkflowActionLog {
  id: Int!
  instanceId: Int!
  instance: WorkflowInstance!
  stepId: Int!
  step: WorkflowStep!
  actionType: ActionType!
  actionByUserId: Int!
  actionByUser: User
  actionAt: DateTime!
  note: String
  metadata: String
  createdAt: DateTime!
}

"""Loại hành động trong workflow"""
enum ActionType {
  APPROVE
  REJECT
  TRANSFER
  CANCEL
  START
  COMPLETE
}

type WorkflowStep {
  id: Int!
  name: String!
  description: String
  type: StepType!
  assignedRole: String!
  orderNumber: Int!
  nextStepId: Int
  isActive: Boolean!
  templateId: Int!
  template: WorkflowTemplate!
  actionLogs: [WorkflowActionLog!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""Loại bước trong workflow"""
enum StepType {
  START
  APPROVAL
  TRANSFER
  END
}

type WorkflowTemplate {
  id: Int!
  name: String!
  description: String
  isActive: Boolean!
  createdByUserId: Int!
  createdByUser: User!
  createdAt: DateTime!
  updatedAt: DateTime!
  steps: [WorkflowStep!]!
  instances: [WorkflowInstance!]!
}

"""Paginated response for WorkflowTemplate"""
type WorkflowTemplatePageDto {
  """Array of workflow templates"""
  data: [WorkflowTemplate!]!

  """Pagination metadata"""
  meta: PageMetaDto!
}

"""Paginated response for WorkflowStep"""
type WorkflowStepPageDto {
  """Array of workflow steps"""
  data: [WorkflowStep!]!

  """Pagination metadata"""
  meta: PageMetaDto!
}

type SignInOtpOutput {
  accessToken: String!
}

type SignInOtpResponse {
  """Dữ liệu trả về"""
  data: SignInOtpOutput

  """Thông tin metadata của response"""
  metadata: Metadata!
}

type SentOtpOutput {
  status: Boolean!
}

type SentOtpResponse {
  """Dữ liệu trả về"""
  data: SentOtpOutput

  """Thông tin metadata của response"""
  metadata: Metadata!
}

type RefreshTokenOutput {
  accessToken: String!
}

type RefreshTokenReponse {
  """Dữ liệu trả về"""
  data: RefreshTokenOutput

  """Thông tin metadata của response"""
  metadata: Metadata!
}

type LogoutOutput {
  status: Boolean!
}

type LogoutResponse {
  """Dữ liệu trả về"""
  data: LogoutOutput

  """Thông tin metadata của response"""
  metadata: Metadata!
}

type UserResponse {
  """Dữ liệu trả về"""
  data: User

  """Thông tin metadata của response"""
  metadata: Metadata!
}

type ChangePasswordOutput {
  status: String!
}

type ChangePasswordResponse {
  """Dữ liệu trả về"""
  data: ChangePasswordOutput

  """Thông tin metadata của response"""
  metadata: Metadata!
}

type GetCurrentUserDataOutput {
  user: User!
}

type getCurrentUserDataReponse {
  """Dữ liệu trả về"""
  data: GetCurrentUserDataOutput

  """Thông tin metadata của response"""
  metadata: Metadata!
}

type GetUsersPaginatedResponse {
  """Dữ liệu trả về (danh sách)"""
  data: [User!]

  """Thông tin metadata của response"""
  metadata: Metadata!

  """Tổng số mục (cho phân trang)"""
  totalCount: Int

  """Còn trang tiếp theo không (cho phân trang)"""
  hasNextPage: Boolean
}

type AddRoleOutput {
  """User đã được cập nhật role"""
  user: User!
}

type AddRoleResponse {
  """Dữ liệu trả về"""
  data: AddRoleOutput

  """Thông tin metadata của response"""
  metadata: Metadata!
}

type RemoveRoleOutput {
  """User đã được cập nhật role"""
  user: User!
}

type RemoveRoleResponse {
  """Dữ liệu trả về"""
  data: RemoveRoleOutput

  """Thông tin metadata của response"""
  metadata: Metadata!
}

type GetRolesOutput {
  """Danh sách role của user"""
  roles: [Role!]!
}

type GetRolesResponse {
  """Dữ liệu trả về"""
  data: GetRolesOutput

  """Thông tin metadata của response"""
  metadata: Metadata!
}

type UpdateProfileResponse {
  metadata: Metadata!
  data: User!
}

type GetUserActivitiesResponse {
  metadata: Metadata!
  data: [UserActivity!]!
  meta: PageMetaDto!
}

type UploadAvatarResponse {
  metadata: Metadata!
  data: User!
}

type StreamFileOutput {
  id: String!
  originalName: String!
  mimeType: String!
  fileData: String!
  isPublic: Boolean!
}

type CreateUnitOutput {
  """Đơn vị đã tạo"""
  unit: Unit!
}

type CreateUnitResponse {
  """Dữ liệu trả về"""
  data: CreateUnitOutput

  """Thông tin metadata của response"""
  metadata: Metadata!
}

type UpdateUnitOutput {
  """Đơn vị đã cập nhật"""
  unit: Unit!
}

type UpdateUnitResponse {
  """Dữ liệu trả về"""
  data: UpdateUnitOutput

  """Thông tin metadata của response"""
  metadata: Metadata!
}

type RemoveUnitOutput {
  """Kết quả xóa"""
  success: Boolean!
}

type RemoveUnitResponse {
  """Dữ liệu trả về"""
  data: RemoveUnitOutput

  """Thông tin metadata của response"""
  metadata: Metadata!
}

type GetUnitOutput {
  """Thông tin đơn vị"""
  unit: Unit!
}

type GetUnitResponse {
  """Dữ liệu trả về"""
  data: GetUnitOutput

  """Thông tin metadata của response"""
  metadata: Metadata!
}

type GetUnitsPaginatedResponse {
  """Dữ liệu trả về (danh sách)"""
  data: [Unit!]

  """Thông tin metadata của response"""
  metadata: Metadata!

  """Tổng số mục (cho phân trang)"""
  totalCount: Int

  """Còn trang tiếp theo không (cho phân trang)"""
  hasNextPage: Boolean
}

type GetAllUnitsResponse {
  data: [Unit!]
  metadata: Metadata!
}

type CreateUnitTypeOutput {
  unitType: UnitType!
}

type CreateUnitTypeResponse {
  """Dữ liệu trả về"""
  data: CreateUnitTypeOutput

  """Thông tin metadata của response"""
  metadata: Metadata!
}

type UpdateUnitTypeOutput {
  unitType: UnitType!
}

type UpdateUnitTypeResponse {
  """Dữ liệu trả về"""
  data: UpdateUnitTypeOutput

  """Thông tin metadata của response"""
  metadata: Metadata!
}

type RemoveUnitTypeOutput {
  unitType: UnitType
}

type RemoveUnitTypeResponse {
  """Dữ liệu trả về"""
  data: RemoveUnitTypeOutput

  """Thông tin metadata của response"""
  metadata: Metadata!
}

type GetUnitTypeOutput {
  unitType: UnitType!
}

type GetUnitTypeResponse {
  """Dữ liệu trả về"""
  data: GetUnitTypeOutput

  """Thông tin metadata của response"""
  metadata: Metadata!
}

type GetUnitTypesPaginatedResponse {
  """Dữ liệu trả về (danh sách)"""
  data: [UnitType!]

  """Thông tin metadata của response"""
  metadata: Metadata!

  """Tổng số mục (cho phân trang)"""
  totalCount: Int

  """Còn trang tiếp theo không (cho phân trang)"""
  hasNextPage: Boolean
}

type CreatePositionOutput {
  """Chức vụ đã tạo"""
  position: Position!
}

type CreatePositionResponse {
  """Dữ liệu trả về"""
  data: CreatePositionOutput

  """Thông tin metadata của response"""
  metadata: Metadata!
}

type UpdatePositionOutput {
  """Chức vụ đã cập nhật"""
  position: Position!
}

type UpdatePositionResponse {
  """Dữ liệu trả về"""
  data: UpdatePositionOutput

  """Thông tin metadata của response"""
  metadata: Metadata!
}

type RemovePositionOutput {
  """Kết quả xóa"""
  success: Boolean!
}

type RemovePositionResponse {
  """Dữ liệu trả về"""
  data: RemovePositionOutput

  """Thông tin metadata của response"""
  metadata: Metadata!
}

type GetPositionOutput {
  """Thông tin chức vụ"""
  position: Position!
}

type GetPositionResponse {
  """Dữ liệu trả về"""
  data: GetPositionOutput

  """Thông tin metadata của response"""
  metadata: Metadata!
}

type GetPositionsPaginatedResponse {
  """Dữ liệu trả về (danh sách)"""
  data: [Position!]

  """Thông tin metadata của response"""
  metadata: Metadata!

  """Tổng số mục (cho phân trang)"""
  totalCount: Int

  """Còn trang tiếp theo không (cho phân trang)"""
  hasNextPage: Boolean
}

type GetAllPositionsResponse {
  data: [Position!]
  metadata: Metadata!
}

type GetPositionsOutput {
  positions: [Position!]!
}

type GetPositionsResponse {
  """Dữ liệu trả về"""
  data: GetPositionsOutput

  """Thông tin metadata của response"""
  metadata: Metadata!
}

type CreateAssignmentOutput {
  """ID của assignment"""
  id: Int!

  """ID người dùng được phân công"""
  userId: Int!

  """Người dùng được phân công"""
  user: User!

  """ID chức vụ của assignment"""
  positionId: Int!

  """Chức vụ của assignment"""
  position: Position!

  """ID đơn vị tổ chức của assignment"""
  unitId: Int!

  """Đơn vị tổ chức của assignment"""
  unit: Unit!
}

type CreateAssignmentResponse {
  """Dữ liệu trả về"""
  data: CreateAssignmentOutput

  """Thông tin metadata của response"""
  metadata: Metadata!
}

type UpdateAssignmentOutput {
  """ID của assignment"""
  id: Int!

  """ID người dùng được phân công"""
  userId: Int!

  """Người dùng được phân công"""
  user: User!

  """ID chức vụ của assignment"""
  positionId: Int!

  """Chức vụ của assignment"""
  position: Position!

  """ID đơn vị tổ chức của assignment"""
  unitId: Int!

  """Đơn vị tổ chức của assignment"""
  unit: Unit!
}

type UpdateAssignmentResponse {
  """Dữ liệu trả về"""
  data: UpdateAssignmentOutput

  """Thông tin metadata của response"""
  metadata: Metadata!
}

type RemoveAssignmentOutput {
  """ID của assignment"""
  id: Int!

  """ID người dùng được phân công"""
  userId: Int!

  """Người dùng được phân công"""
  user: User!

  """ID chức vụ của assignment"""
  positionId: Int!

  """Chức vụ của assignment"""
  position: Position!

  """ID đơn vị tổ chức của assignment"""
  unitId: Int!

  """Đơn vị tổ chức của assignment"""
  unit: Unit!
}

type RemoveAssignmentResponse {
  """Dữ liệu trả về"""
  data: RemoveAssignmentOutput

  """Thông tin metadata của response"""
  metadata: Metadata!
}

type GetAssignmentOutput {
  """ID của assignment"""
  id: Int!

  """ID người dùng được phân công"""
  userId: Int!

  """Người dùng được phân công"""
  user: User!

  """ID chức vụ của assignment"""
  positionId: Int!

  """Chức vụ của assignment"""
  position: Position!

  """ID đơn vị tổ chức của assignment"""
  unitId: Int!

  """Đơn vị tổ chức của assignment"""
  unit: Unit!
}

type GetAssignmentResponse {
  """Dữ liệu trả về"""
  data: GetAssignmentOutput

  """Thông tin metadata của response"""
  metadata: Metadata!
}

type GetAssignmentsPaginatedResponse {
  """Dữ liệu trả về (danh sách)"""
  data: [Assignment!]

  """Thông tin metadata của response"""
  metadata: Metadata!

  """Tổng số mục (cho phân trang)"""
  totalCount: Int

  """Còn trang tiếp theo không (cho phân trang)"""
  hasNextPage: Boolean
}

type CreateAssignmentsOutput {
  assignments: [Assignment!]!
}

type CreateAssignmentsResponse {
  """Dữ liệu trả về"""
  data: CreateAssignmentsOutput

  """Thông tin metadata của response"""
  metadata: Metadata!
}

type CreateDepartmentOutput {
  """Phòng ban đã tạo"""
  department: Department!
}

type CreateDepartmentResponse {
  """Dữ liệu trả về"""
  data: CreateDepartmentOutput

  """Thông tin metadata của response"""
  metadata: Metadata!
}

type UpdateDepartmentOutput {
  """Phòng ban đã cập nhật"""
  department: Department!
}

type UpdateDepartmentResponse {
  """Dữ liệu trả về"""
  data: UpdateDepartmentOutput

  """Thông tin metadata của response"""
  metadata: Metadata!
}

type RemoveDepartmentOutput {
  """Kết quả xóa"""
  success: Boolean!
}

type GetDepartmentOutput {
  """Thông tin phòng ban"""
  department: Department!
}

type GetDepartmentsPaginatedResponse {
  """Dữ liệu trả về (danh sách)"""
  data: [Department!]

  """Thông tin metadata của response"""
  metadata: Metadata!

  """Tổng số mục (cho phân trang)"""
  totalCount: Int

  """Còn trang tiếp theo không (cho phân trang)"""
  hasNextPage: Boolean
}

type GetDepartmentResponse {
  """Dữ liệu trả về"""
  data: GetDepartmentOutput

  """Thông tin metadata của response"""
  metadata: Metadata!
}

type RemoveDepartmentResponse {
  """Dữ liệu trả về"""
  data: RemoveDepartmentOutput

  """Thông tin metadata của response"""
  metadata: Metadata!
}

type GetAllDepartmentOutput {
  departments: [Department!]!
}

type GetAllDepartmentResponse {
  """Dữ liệu trả về"""
  data: GetAllDepartmentOutput

  """Thông tin metadata của response"""
  metadata: Metadata!
}

type CreateUserPositionOutput {
  userPosition: UserPosition!
}

type CreateUserPositionResponse {
  """Dữ liệu trả về"""
  data: CreateUserPositionOutput

  """Thông tin metadata của response"""
  metadata: Metadata!
}

type GetAllByUserOutput {
  userPositions: [UserPosition!]!
}

type GetAllByUserReponse {
  """Dữ liệu trả về"""
  data: GetAllByUserOutput

  """Thông tin metadata của response"""
  metadata: Metadata!
}

type DocumentCategory {
  id: Int!
  name: String!
  description: String
}

type DocumentComment {
  id: Int!
  content: String!
  documentId: Int!
  document: Document!
  createdByUserId: Int!
  createdByUser: User!
  parentCommentId: Int
  parentComment: DocumentComment
  createdAt: DateTime!
  updatedAt: DateTime!
}

type DocumentVersion {
  id: Int!
  documentId: Int!
  document: Document!
  title: String!
  content: String
  documentNumber: String
  fileId: Int
  file: File
  versionNumber: Float!
  changeDescription: String!
  createdByUserId: Int!
  createdByUser: User!
  createdAt: DateTime!
}

type DocumentApprovalHistory {
  id: Int!
  documentId: Int!
  document: Document!
  action: ApprovalAction!
  level: ApprovalLevel!
  comment: String
  approvedByUserId: Int!
  approvedByUser: User!
  createdAt: DateTime!
}

"""Type of approval action"""
enum ApprovalAction {
  APPROVE
  REJECT
  RETURN
  FORWARD
}

"""Level of approval"""
enum ApprovalLevel {
  DRAFT
  DEPARTMENT_HEAD
  UNIVERSITY_LEADER
  FINAL
}

type TaskRequest {
  id: Int!
  requestedByUserId: Int!
  requestedByUser: User
  assignedToUserId: Int!
  assignedToUser: User
  title: String!
  description: String
  priority: TaskPriority!
  deadline: DateTime
  instructions: String
  notes: String
  status: TaskRequestStatus!
  rejectionReason: String
  approvedAt: DateTime
  rejectedAt: DateTime
  cancelledAt: DateTime
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""Priority level of task"""
enum TaskPriority {
  LOW
  MEDIUM
  HIGH
  URGENT
}

"""Status of task request"""
enum TaskRequestStatus {
  PENDING
  APPROVED
  REJECTED
  CANCELLED
}

type Document {
  id: Int!
  title: String!
  content: String
  documentNumber: String
  documentType: DocumentTypeEnum!
  documentCategoryId: Int!
  documentCategory: DocumentCategory
  file: File
  fileId: Int
  status: DocumentStatus!
  priority: DocumentPriority!
  deadline: DateTime
  assignedToUserId: Int
  assignedToUser: User
  createdByUserId: Int!
  createdByUser: User
  comments: [DocumentComment!]
  versions: [DocumentVersion!]
  approvalHistory: [DocumentApprovalHistory!]
  taskRequestId: Int
  taskRequest: TaskRequest
  createdAt: DateTime
  updatedAt: DateTime
}

"""
Type of document: OUTGOING (sent), INCOMING (received), INTERNAL (internal document)
"""
enum DocumentTypeEnum {
  OUTGOING
  INCOMING
  INTERNAL
}

"""Status of document"""
enum DocumentStatus {
  DRAFT
  PENDING
  PROCESSING
  APPROVED
  REJECTED
  COMPLETED
  CANCELLED
}

"""Priority level of document"""
enum DocumentPriority {
  LOW
  MEDIUM
  HIGH
  URGENT
}

type DocumentProcessingInfo {
  """ID của document"""
  documentId: Int!

  """Tiêu đề document"""
  documentTitle: String!

  """Loại document"""
  documentType: String!

  """Category của document"""
  documentCategory: String!

  """Trạng thái document"""
  status: String!

  """Thời gian tạo"""
  createdAt: DateTime!

  """ID của workflow instance"""
  workflowInstanceId: Int

  """ID của step hiện tại"""
  currentStepId: Int

  """Tên step hiện tại"""
  currentStepName: String

  """Trạng thái workflow"""
  workflowStatus: String

  """Cần xử lý không"""
  requiresAction: Boolean!

  """Loại action có sẵn"""
  actionType: String

  """Deadline"""
  deadline: DateTime

  """Mức độ ưu tiên"""
  priority: PriorityEnum!
}

"""Mức độ ưu tiên của document"""
enum PriorityEnum {
  LOW
  MEDIUM
  HIGH
  URGENT
}

type DocumentsForProcessingResponse {
  """Danh sách documents cần xử lý"""
  documents: [DocumentProcessingInfo!]!
}

type ProcessedDocumentsResponse {
  """Danh sách documents đã xử lý"""
  documents: [DocumentProcessingInfo!]!
}

type ProcessingStatistics {
  """Tổng số documents"""
  totalDocuments: Int!

  """Số documents đang chờ xử lý"""
  pendingCount: Int!

  """Số documents đã hoàn thành"""
  completedCount: Int!

  """Số documents đang xử lý"""
  inProgressCount: Int!

  """Tỷ lệ hoàn thành (%)"""
  completionRate: Float!
}

type ProcessingStatisticsResponse {
  """Thông tin metadata của response"""
  metadata: Metadata!

  """Thống kê xử lý"""
  data: ProcessingStatistics!
}

type GetDocumentsPaginatedResponse {
  """Dữ liệu trả về (danh sách)"""
  data: [Document!]

  """Thông tin metadata của response"""
  metadata: Metadata!

  """Tổng số mục (cho phân trang)"""
  totalCount: Int

  """Còn trang tiếp theo không (cho phân trang)"""
  hasNextPage: Boolean
}

type DocumentResponse {
  """Dữ liệu trả về"""
  data: Document

  """Thông tin metadata của response"""
  metadata: Metadata!
}

type DocumentsResponse {
  metadata: Metadata!
  data: [Document!]!
}

type DocumentStatistics {
  pending: Int!
  processing: Int!
  completed: Int!
  rejected: Int!
  total: Int!
}

type DocumentStatisticsResponse {
  metadata: Metadata!
  data: DocumentStatistics!
}

type DocumentHistoryItem {
  id: Int!
  actionType: String!
  actionByUser: User
  actionAt: DateTime!
  note: String
  stepName: String!
  stepType: String!
}

type DocumentHistoryResponse {
  metadata: Metadata!
  data: [DocumentHistoryItem!]!
}

type TaskAssignment {
  id: Int!
  documentId: Int!
  document: Document
  assignedToUserId: Int!
  assignedToUser: User
  assignedByUserId: Int!
  assignedByUser: User
  taskDescription: String
  deadline: DateTime
  instructions: String
  notes: String
  status: TaskStatus!
  assignedAt: DateTime!
  completedAt: DateTime
  updatedAt: DateTime!
}

"""Status of task assignment"""
enum TaskStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

type TaskAssignmentResponse {
  """Dữ liệu trả về"""
  data: TaskAssignment

  """Thông tin metadata của response"""
  metadata: Metadata!
}

type TaskStatistics {
  total: Int!
  pending: Int!
  inProgress: Int!
  completed: Int!
  cancelled: Int!
}

type TaskStatisticsResponse {
  metadata: Metadata!
  data: TaskStatistics!
}

type TasksResponse {
  metadata: Metadata!
  data: [TaskAssignment!]!
}

"""Thống kê task request"""
type TaskRequestStatistics {
  """Tổng số task request"""
  total: Int!

  """Số task request đang chờ xử lý"""
  pending: Int!

  """Số task request đã được phê duyệt"""
  approved: Int!

  """Số task request đã bị từ chối"""
  rejected: Int!

  """Số task request đã bị hủy"""
  cancelled: Int!
}

"""Kết quả tạo document từ task request"""
type CreateDocumentFromTaskOutput {
  """ID của document được tạo"""
  documentId: Int!

  """ID của workflow instance được tạo"""
  workflowInstanceId: Int!

  """Trạng thái thành công"""
  success: Boolean!

  """Thông báo kết quả"""
  message: String!
}

type StepTypeDto {
  value: String!
  label: String!
}

type RoleDto {
  value: String!
  label: String!
}

type WorkflowPermissionDto {
  instanceId: Int!
  stepId: Int!
  actionType: String!
  canPerform: Boolean!
  reason: String
}

type WorkflowViewPermissionDto {
  instanceId: Int!
  canView: Boolean!
  reason: String
}

type WorkflowCreatePermissionDto {
  templateId: Int!
  canCreate: Boolean!
  reason: String
}

type AvailableActionsDto {
  stepId: Int!
  availableActions: [String!]!
}

type RoleLabelDto {
  role: String!
  label: String!
}

type ActionTypeLabelDto {
  actionType: String!
  label: String!
}

type GetDocumentCategoriesPaginatedResponse {
  """Dữ liệu trả về (danh sách)"""
  data: [DocumentCategory!]

  """Thông tin metadata của response"""
  metadata: Metadata!

  """Tổng số mục (cho phân trang)"""
  totalCount: Int

  """Còn trang tiếp theo không (cho phân trang)"""
  hasNextPage: Boolean
}

type GetDocumentCategoryOutput {
  """Thông tin nhóm văn bản"""
  documentCategory: DocumentCategory!
}

type GetDocumentCategoryResponse {
  """Dữ liệu trả về"""
  data: GetDocumentCategoryOutput

  """Thông tin metadata của response"""
  metadata: Metadata!
}

type RemoveDocumentCategoryOutput {
  """Kết quả xóa"""
  success: Boolean!
}

type RemoveDocumentCategoryResponse {
  """Dữ liệu trả về"""
  data: RemoveDocumentCategoryOutput

  """Thông tin metadata của response"""
  metadata: Metadata!
}

type DocumentType {
  id: Int!
  name: String!
  description: String
}

type CreateDocumentTypeOutput {
  documentType: DocumentType!
}

type CreateDocumentTypeResponse {
  """Dữ liệu trả về"""
  data: CreateDocumentTypeOutput

  """Thông tin metadata của response"""
  metadata: Metadata!
}

type GetDocumentTypesPaginatedResponse {
  """Dữ liệu trả về (danh sách)"""
  data: [DocumentType!]

  """Thông tin metadata của response"""
  metadata: Metadata!

  """Tổng số mục (cho phân trang)"""
  totalCount: Int

  """Còn trang tiếp theo không (cho phân trang)"""
  hasNextPage: Boolean
}

type GetDocumentTypeOutput {
  """Thông tin loại văn bản"""
  documentType: DocumentType!
}

type GetDocumentTypeResponse {
  """Dữ liệu trả về"""
  data: GetDocumentTypeOutput

  """Thông tin metadata của response"""
  metadata: Metadata!
}

type RemoveDocumentTypeOutput {
  """Kết quả xóa"""
  success: Boolean!
}

type RemoveDocumentTypeResponse {
  """Dữ liệu trả về"""
  data: RemoveDocumentTypeOutput

  """Thông tin metadata của response"""
  metadata: Metadata!
}

type UpdateDocumentTypeOutput {
  documentType: DocumentType!
}

type UpdateDocumentTypeResponse {
  """Dữ liệu trả về"""
  data: UpdateDocumentTypeOutput

  """Thông tin metadata của response"""
  metadata: Metadata!
}

type Query {
  users: [User!]!
  user(id: Int!): User
  usersPaginated(input: GetUsersPaginatedInput!): GetUsersPaginatedResponse!
  usersByRole(role: Role!): [User!]!
  checkEmailExists(email: String!): Boolean!
  userStatistics: String!
  getUserRoles(userId: Int!): GetRolesResponse!
  getUserActivities(input: GetUserActivitiesInput!): GetUserActivitiesResponse!
  myProfile: User!
  userProfile(id: Int!): User!
  profileStats: String!
  files: [File!]!
  file(id: Int!): File!
  streamFile(id: String!): StreamFileOutput!
  units(input: GetUnitsPaginatedInput!): GetUnitsPaginatedResponse!
  unit(id: Int!): GetUnitResponse!
  allUnits: GetAllUnitsResponse!
  unitTypes(input: GetUnitTypesPaginatedInput!): GetUnitTypesPaginatedResponse!
  unitType(id: Int!): GetUnitTypeResponse!
  positions(input: GetPositionsPaginatedInput!): GetPositionsPaginatedResponse!
  allPositionsByDepartmentId(departmentId: Int!): GetPositionsResponse!
  allPositions: GetAllPositionsResponse!
  position(id: Int!): GetPositionResponse!
  assignments: GetAssignmentsPaginatedResponse!
  assignmentsByUser(userId: Int!): GetAssignmentsPaginatedResponse!
  assignment(id: Int!): GetAssignmentResponse!
  departmentsPaginated(input: GetDepartmentsPaginatedInput!): GetDepartmentsPaginatedResponse!
  getAllDepartmentBySearch(search: String!): GetAllDepartmentResponse!
  department(input: GetDepartmentInput!): GetDepartmentResponse!
  getAllByUser(userId: Int!): GetAllByUserReponse!

  """Lấy tất cả workflow action logs"""
  workflowActionLogs: [WorkflowActionLog!]!

  """Lấy workflow action logs theo instance ID"""
  workflowActionLogsByInstance(instanceId: Int!): [WorkflowActionLog!]!

  """Lấy workflow action logs theo user ID"""
  workflowActionLogsByUser(userId: Int!): [WorkflowActionLog!]!

  """Lấy workflow action log theo ID"""
  workflowActionLog(id: Int!): WorkflowActionLog!

  """Lấy timeline của workflow instance"""
  workflowTimeline(instanceId: Int!): [WorkflowActionLog!]!

  """Lấy các hành động workflow gần đây"""
  recentWorkflowActions(limit: Int! = 10): [WorkflowActionLog!]!

  """Lấy tất cả workflow instances"""
  workflowInstances: [WorkflowInstance!]!

  """Lấy workflow instance theo ID"""
  workflowInstance(id: Int!): WorkflowInstance!

  """Lấy workflow instances của user hiện tại"""
  myWorkflowInstances: [WorkflowInstance!]!

  """Lấy workflow instances đang chờ xử lý theo role"""
  pendingWorkflows: [WorkflowInstance!]!

  """Lấy workflow instances mà user hiện tại có thể xử lý"""
  myPendingWorkflows: [WorkflowInstance!]!

  """Lấy danh sách actions có thể thực hiện cho workflow instance"""
  availableActions(instanceId: Int!): [String!]!

  """Lấy lịch sử workflow instance"""
  workflowHistory(instanceId: Int!): WorkflowInstance!

  """Lấy tất cả workflow steps"""
  workflowSteps: [WorkflowStep!]!

  """Lấy danh sách workflow steps có phân trang"""
  workflowStepsPaginated(input: GetWorkflowStepPaginatedInput!): WorkflowStepPageDto!

  """Lấy workflow step theo ID"""
  workflowStep(id: Int!): WorkflowStep!

  """Lấy workflow steps theo template ID"""
  workflowStepsByTemplate(templateId: Int!): [WorkflowStep!]!

  """Lấy danh sách các loại workflow step"""
  workflowStepTypes: [StepTypeDto!]!

  """Lấy danh sách các vai trò có thể gán cho workflow step"""
  workflowRoles: [String!]!

  """Lấy tất cả workflow templates"""
  workflowTemplates: [WorkflowTemplate!]!

  """Lấy danh sách workflow templates có phân trang"""
  workflowTemplatesPaginated(input: GetWorkflowTemplatePaginatedInput!): WorkflowTemplatePageDto!

  """Lấy workflow template theo ID"""
  workflowTemplate(id: Int!): WorkflowTemplate!

  """Lấy danh sách workflow templates đang hoạt động"""
  activeWorkflowTemplates: [WorkflowTemplate!]!

  """Lấy danh sách các loại hành động trong workflow"""
  workflowActionTypes: [String!]!

  """Kiểm tra user có thể thực hiện action trên workflow step không"""
  checkWorkflowPermission(input: CheckWorkflowPermissionInput!): WorkflowPermissionDto!

  """
  Kiểm tra user có thể thực hiện action trên workflow step không (legacy)
  """
  canPerformWorkflowAction(instanceId: Int!, stepId: Int!, actionType: String!): Boolean!

  """Kiểm tra user có thể xem workflow instance không"""
  checkWorkflowViewPermission(input: CheckWorkflowViewPermissionInput!): WorkflowViewPermissionDto!

  """Kiểm tra user có thể xem workflow instance không (legacy)"""
  canViewWorkflow(instanceId: Int!): Boolean!

  """Kiểm tra user có thể tạo workflow instance không"""
  checkWorkflowCreatePermission(input: CheckWorkflowCreatePermissionInput!): WorkflowCreatePermissionDto!

  """Kiểm tra user có thể tạo workflow instance không (legacy)"""
  canCreateWorkflow(templateId: Int!): Boolean!

  """Lấy danh sách actions có thể thực hiện cho step"""
  getAvailableActionsForStep(stepId: Int!): AvailableActionsDto!

  """Lấy danh sách actions có thể thực hiện cho step (legacy)"""
  availableActionsForStep(stepId: Int!): [String!]!

  """Lấy label cho role"""
  getRoleLabel(role: String!): RoleLabelDto!

  """Lấy label cho role (legacy)"""
  roleLabel(role: String!): String!

  """Lấy label cho action type"""
  getActionTypeLabel(actionType: String!): ActionTypeLabelDto!

  """Lấy label cho action type (legacy)"""
  actionTypeLabel(actionType: String!): String!
  documents(input: GetDocumentsPaginatedInput!): GetDocumentsPaginatedResponse!
  document(id: Int!): DocumentResponse!
  myDocumentsForProcessing: DocumentsForProcessingResponse!
  documentsForProcessing: DocumentsForProcessingResponse!
  myDocumentsByStatus(status: String!): DocumentsResponse!
  myDocumentStatistics: DocumentStatisticsResponse!
  processingStatistics: ProcessingStatisticsResponse!
  documentProcessingHistory(documentId: Int!): DocumentHistoryResponse!
  searchDocuments(searchTerm: String, status: String, documentType: String, priority: String): DocumentsResponse!
  processedDocuments: ProcessedDocumentsResponse!
  urgentDocuments: DocumentsForProcessingResponse!
  myAssignedTasks: TasksResponse!
  tasksAssignedByMe: TasksResponse!
  taskAssignment(id: Int!): TaskAssignmentResponse!
  tasksByStatus(status: String!): TasksResponse!
  taskStatistics: TaskStatisticsResponse!
  searchTasks(searchTerm: String, status: String, assignedByUserId: Int): TasksResponse!
  taskRequest(id: Int!): TaskRequest!
  myTaskRequests: [TaskRequest!]!
  myCreatedTaskRequests: [TaskRequest!]!
  taskRequestsByStatus(status: TaskRequestStatus!): [TaskRequest!]!
  taskRequestStatistics: TaskRequestStatistics!
  documentCategories(input: GetDocumentCategoriesPaginatedInput!): GetDocumentCategoriesPaginatedResponse!
  documentCategory(id: Int!): GetDocumentCategoryResponse!
  allDocumentCategories: [DocumentCategory!]!
  documentTypes(input: GetDocumentTypesPaginatedInput!): GetDocumentTypesPaginatedResponse!
  documentType(id: Int!): GetDocumentTypeResponse!
}

input GetUsersPaginatedInput {
  """Thứ tự sắp xếp"""
  order: Order = ASC

  """Số trang hiện tại"""
  page: Int = 1

  """Số lượng item trên mỗi trang"""
  take: Int = 10

  """Tìm kiếm theo tên hoặc email"""
  search: String

  """Lọc theo vai trò"""
  role: Role

  """Lọc theo trạng thái hoạt động"""
  isActive: Boolean
}

"""Thứ tự sắp xếp"""
enum Order {
  ASC
  DESC
}

input GetUserActivitiesInput {
  page: Int! = 1
  limit: Int! = 10
  activityType: ActivityType
  startDate: String
  endDate: String
}

input GetUnitsPaginatedInput {
  """Thứ tự sắp xếp"""
  order: Order = ASC

  """Số trang hiện tại"""
  page: Int = 1

  """Số lượng item trên mỗi trang"""
  take: Int = 10

  """Từ khóa tìm kiếm"""
  search: String

  """ID loại đơn vị để lọc"""
  unitTypeId: Int

  """ID đơn vị cha để lọc"""
  parentUnitId: Int
}

input GetUnitTypesPaginatedInput {
  """Thứ tự sắp xếp"""
  order: Order = ASC

  """Số trang hiện tại"""
  page: Int = 1

  """Số lượng item trên mỗi trang"""
  take: Int = 10

  """Từ khóa tìm kiếm theo tên hoặc mô tả"""
  search: String
}

input GetPositionsPaginatedInput {
  """Thứ tự sắp xếp"""
  order: Order = ASC

  """Số trang hiện tại"""
  page: Int = 1

  """Số lượng item trên mỗi trang"""
  take: Int = 10

  """Từ khóa tìm kiếm"""
  search: String
}

input GetDepartmentsPaginatedInput {
  """Thứ tự sắp xếp"""
  order: Order = ASC

  """Số trang hiện tại"""
  page: Int = 1

  """Số lượng item trên mỗi trang"""
  take: Int = 10

  """Từ khóa tìm kiếm"""
  search: String

  """ID phòng ban cha để lọc"""
  parentDepartmentId: Int
}

input GetDepartmentInput {
  """ID phòng ban"""
  id: Int!
}

input GetWorkflowStepPaginatedInput {
  page: Int
  take: Int
  search: String
  templateId: Int
  type: String
  order: String
}

"""Dữ liệu đầu vào để lấy danh sách workflow template có phân trang"""
input GetWorkflowTemplatePaginatedInput {
  """Thứ tự sắp xếp"""
  order: Order = ASC

  """Số trang hiện tại"""
  page: Int = 1

  """Số lượng item trên mỗi trang"""
  take: Int = 10

  """Từ khóa tìm kiếm"""
  search: String
}

input CheckWorkflowPermissionInput {
  instanceId: Int!
  stepId: Int!
  actionType: String!
}

input CheckWorkflowViewPermissionInput {
  instanceId: Int!
}

input CheckWorkflowCreatePermissionInput {
  templateId: Int!
}

input GetDocumentsPaginatedInput {
  """Thứ tự sắp xếp"""
  order: Order = ASC

  """Số trang hiện tại"""
  page: Int = 1

  """Số lượng item trên mỗi trang"""
  take: Int = 10
  search: String
  documentType: DocumentTypeEnum
  status: DocumentStatus
  priority: DocumentPriority
  documentCategoryId: Int
  assignedToUserId: Int
  createdByUserId: Int
  deadlineFrom: String
  deadlineTo: String
  createdAtFrom: String
  createdAtTo: String
  documentNumber: String
  hasDeadline: Boolean
  isOverdue: Boolean
}

input GetDocumentCategoriesPaginatedInput {
  """Thứ tự sắp xếp"""
  order: Order = ASC

  """Số trang hiện tại"""
  page: Int = 1

  """Số lượng item trên mỗi trang"""
  take: Int = 10

  """Từ khóa tìm kiếm"""
  search: String
}

input GetDocumentTypesPaginatedInput {
  """Thứ tự sắp xếp"""
  order: Order = ASC

  """Số trang hiện tại"""
  page: Int = 1

  """Số lượng item trên mỗi trang"""
  take: Int = 10

  """Từ khóa tìm kiếm"""
  search: String
}

type Mutation {
  signIn(input: SignInInput!): SignInResponse!
  signInWithOtp(input: SignInOtpInput!): SignInOtpResponse!
  sentOtp(input: SentOtpInput!): SentOtpResponse!
  refreshToken: RefreshTokenReponse!
  logout: LogoutResponse!
  createUser(createUserInput: CreateUserInput!, avatarImageFile: Upload): UserResponse!
  changePassword(input: ChangePasswordInput!): ChangePasswordResponse!
  getCurrentUserData: getCurrentUserDataReponse!
  updateUser(updateUserInput: UpdateUserInput!, avatarImageFile: Upload): UserResponse!
  removeUser(id: Int!): UserResponse!
  lockUser(id: Int!): UserResponse!
  unlockUser(id: Int!): UserResponse!
  resetPassword(id: Int!): UserResponse!
  changeRoles(id: Int!, roles: [Role!]!): UserResponse!
  addRole(input: AddRoleInput!): AddRoleResponse!
  removeRole(input: RemoveRoleInput!): RemoveRoleResponse!
  updateProfile(input: UpdateProfileInput!): UpdateProfileResponse!
  uploadAvatar(avatarFile: Upload!): UploadAvatarResponse!
  removeAvatar: UploadAvatarResponse!
  createFile(createFileInput: CreateFileInput!): File!
  updateFile(updateFileInput: UpdateFileInput!): File!
  removeFile(id: Int!): File!
  createUnit(createUnitInput: CreateUnitInput!): CreateUnitResponse!
  updateUnit(updateUnitInput: UpdateUnitInput!): UpdateUnitResponse!
  removeUnit(id: Int!): RemoveUnitResponse!
  createUnitType(createUnitTypeInput: CreateUnitTypeInput!): CreateUnitTypeResponse!
  updateUnitType(updateUnitTypeInput: UpdateUnitTypeInput!): UpdateUnitTypeResponse!
  removeUnitType(id: Int!): RemoveUnitTypeResponse!
  createPosition(createPositionInput: CreatePositionInput!): CreatePositionResponse!
  updatePosition(updatePositionInput: UpdatePositionInput!): UpdatePositionResponse!
  removePosition(id: Int!): RemovePositionResponse!
  createAssignment(createAssignmentInput: CreateAssignmentInput!): CreateAssignmentResponse!
  createAssignments(createAssignmentsInput: [CreateAssignmentInput!]!): CreateAssignmentsResponse!
  updateAssignment(updateAssignmentInput: UpdateAssignmentInput!): UpdateAssignmentResponse!
  removeAssignment(id: Int!): RemoveAssignmentResponse!
  createDepartment(input: CreateDepartmentInput!): CreateDepartmentResponse!
  updateDepartment(input: UpdateDepartmentInput!): UpdateDepartmentResponse!
  removeDepartment(input: RemoveDepartmentInput!): RemoveDepartmentResponse!
  createUserPosition(createUserPositionInput: CreateUserPositionInput!): CreateUserPositionResponse!
  endUserPosition(id: Int!): CreateUserPositionResponse!

  """Tạo workflow action log mới"""
  createWorkflowActionLog(createWorkflowActionLogInput: CreateWorkflowActionLogInput!): WorkflowActionLog!

  """Cập nhật workflow action log"""
  updateWorkflowActionLog(updateWorkflowActionLogInput: UpdateWorkflowActionLogInput!): WorkflowActionLog!

  """Xóa workflow action log"""
  removeWorkflowActionLog(id: Int!): Boolean!

  """Ghi log hành động workflow"""
  logWorkflowAction(instanceId: Int!, stepId: Int!, actionType: ActionType!, note: String, metadata: String): WorkflowActionLog!

  """Tạo workflow instance mới"""
  createWorkflowInstance(createWorkflowInstanceInput: CreateWorkflowInstanceInput!): WorkflowInstance!

  """Cập nhật workflow instance"""
  updateWorkflowInstance(updateWorkflowInstanceInput: UpdateWorkflowInstanceInput!): WorkflowInstance!

  """Xóa workflow instance"""
  removeWorkflowInstance(id: Int!): Boolean!

  """Thực hiện hành động trên workflow"""
  executeWorkflowAction(workflowActionInput: WorkflowActionInput!): WorkflowInstance!

  """Tạo workflow step mới"""
  createWorkflowStep(createWorkflowStepInput: CreateWorkflowStepInput!): WorkflowStep!

  """Cập nhật workflow step"""
  updateWorkflowStep(updateWorkflowStepInput: UpdateWorkflowStepInput!): WorkflowStep!

  """Xóa workflow step"""
  removeWorkflowStep(id: Int!): Boolean!

  """Di chuyển workflow step đến vị trí mới"""
  moveWorkflowStep(stepId: Int!, newOrder: Int!): [WorkflowStep!]!

  """Sao chép workflow step"""
  duplicateWorkflowStep(stepId: Int!): WorkflowStep!

  """Sắp xếp lại thứ tự các workflow steps"""
  reorderWorkflowSteps(templateId: Int!): [WorkflowStep!]!

  """Tạo workflow template mới"""
  createWorkflowTemplate(createWorkflowTemplateInput: CreateWorkflowTemplateInput!): WorkflowTemplate!

  """Cập nhật workflow template"""
  updateWorkflowTemplate(updateWorkflowTemplateInput: UpdateWorkflowTemplateInput!): WorkflowTemplate!

  """Xóa workflow template"""
  removeWorkflowTemplate(id: Int!): Boolean!
  createDocument(createDocumentInput: CreateDocumentInput!, file: Upload): DocumentResponse!
  updateDocument(updateDocumentInput: UpdateDocumentInput!): DocumentResponse!
  removeDocument(id: Int!): DocumentResponse!
  assignDocumentToUser(documentId: Int!, assignedToUserId: Int!): DocumentResponse!
  updateDocumentStatusFromWorkflow(documentId: Int!, workflowStatus: String!): DocumentResponse!
  processDocumentAction(input: DocumentActionInput!): DocumentResponse!
  assignTask(assignTaskInput: AssignTaskInput!): TaskAssignmentResponse!
  updateTaskStatus(taskId: Int!, status: String!): TaskAssignmentResponse!
  cancelTask(taskId: Int!): TaskAssignmentResponse!
  createTaskRequest(createTaskRequestInput: CreateTaskRequestInput!): TaskRequest!
  approveTaskRequest(approveTaskRequestInput: ApproveTaskRequestInput!): TaskRequest!
  rejectTaskRequest(rejectTaskRequestInput: RejectTaskRequestInput!): TaskRequest!
  cancelTaskRequest(taskRequestId: Int!): TaskRequest!
  createDocumentFromTask(input: CreateDocumentFromTaskInput!): CreateDocumentFromTaskOutput!
  createDocumentCategory(createDocumentCategoryInput: CreateDocumentCategoryInput!): GetDocumentCategoryResponse!
  updateDocumentCategory(updateDocumentCategoryInput: UpdateDocumentCategoryInput!): GetDocumentCategoryResponse!
  removeDocumentCategory(id: Int!): RemoveDocumentCategoryResponse!
  createDocumentType(createDocumentTypeInput: CreateDocumentTypeInput!): CreateDocumentTypeResponse!
  updateDocumentType(updateDocumentTypeInput: UpdateDocumentTypeInput!): UpdateDocumentTypeResponse!
  removeDocumentType(id: Int!): RemoveDocumentTypeResponse!
}

input SignInInput {
  email: String!
  password: String!
}

input SignInOtpInput {
  email: String!
  otp: String!
}

input SentOtpInput {
  email: String!
}

"""Dữ liệu đầu vào để tạo người dùng mới"""
input CreateUserInput {
  """Email của người dùng (phải là duy nhất)"""
  email: String!

  """Mật khẩu (tối thiểu 8 ký tự)"""
  password: String!

  """Họ của người dùng"""
  lastName: String!

  """Tên của người dùng"""
  firstName: String!

  """Trạng thái kích hoạt tài khoản (mặc định là true)."""
  isActive: Boolean = true
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input ChangePasswordInput {
  newPassword: String!
}

"""Input để cập nhật người dùng"""
input UpdateUserInput {
  """Email của người dùng (phải là duy nhất)"""
  email: String

  """Mật khẩu (tối thiểu 8 ký tự)"""
  password: String

  """Họ của người dùng"""
  lastName: String

  """Tên của người dùng"""
  firstName: String

  """Trạng thái kích hoạt tài khoản (mặc định là true)."""
  isActive: Boolean = true

  """ID của người dùng cần cập nhật"""
  id: Int!

  """Danh sách vai trò mới"""
  roles: [Role!]

  """Ảnh đại diện mới"""
  avatar: String
}

input AddRoleInput {
  """ID của user cần thêm role"""
  userId: Int!

  """Role cần thêm cho user"""
  role: Role!
}

input RemoveRoleInput {
  """ID của user cần xóa role"""
  userId: Int!

  """Role cần xóa khỏi user"""
  role: Role!
}

input UpdateProfileInput {
  firstName: String
  lastName: String
  email: String
  phoneNumber: String
  address: String
  dateOfBirth: String
  gender: String
  jobTitle: String
  bio: String
  website: String
  linkedin: String
  facebook: String
  twitter: String
  emailNotifications: Boolean
  pushNotifications: Boolean
  isProfilePublic: Boolean
}

input CreateFileInput {
  driveFileId: String!
  originalName: String!
  mimeType: String!
  allowedUserIds: [Int!]
  isPublic: Boolean!
}

input UpdateFileInput {
  driveFileId: String
  originalName: String
  mimeType: String
  allowedUserIds: [Int!]
  isPublic: Boolean
  id: Int!
}

input CreateUnitInput {
  """Tên đơn vị"""
  unitName: String!

  """ID loại đơn vị"""
  unitTypeId: Int

  """ID đơn vị cha"""
  parentUnitId: Int

  """Ngày thành lập (YYYY-MM-DD)"""
  establishmentDate: String

  """Email đơn vị"""
  email: String

  """Số điện thoại đơn vị"""
  phone: String
}

input UpdateUnitInput {
  """ID đơn vị cần cập nhật"""
  id: Int!

  """Tên đơn vị"""
  unitName: String

  """ID loại đơn vị"""
  unitTypeId: Int

  """ID đơn vị cha"""
  parentUnitId: Int

  """Ngày thành lập (YYYY-MM-DD)"""
  establishmentDate: String

  """Email đơn vị"""
  email: String

  """Số điện thoại đơn vị"""
  phone: String
}

input CreateUnitTypeInput {
  """Tên của loại đơn vị"""
  typeName: String!

  """Mô tả của loại đơn vị"""
  description: String
}

input UpdateUnitTypeInput {
  """ID của loại đơn vị"""
  id: Int!

  """Tên của loại đơn vị"""
  typeName: String

  """Mô tả của loại đơn vị"""
  description: String
}

input CreatePositionInput {
  """Tên chức vụ"""
  positionName: String!

  """Số lượng chức vụ"""
  maxSlots: Float!

  """Id của phòng ban mà chức vụ này thuộc về"""
  departmentId: Float!
}

input UpdatePositionInput {
  """Tên chức vụ"""
  positionName: String

  """Số lượng chức vụ"""
  maxSlots: Float

  """Id của phòng ban mà chức vụ này thuộc về"""
  departmentId: Float
  id: Int!
}

input CreateAssignmentInput {
  """ID người dùng được phân công"""
  userId: Int!

  """ID chức vụ của assignment"""
  positionId: Int!

  """ID đơn vị tổ chức của assignment"""
  unitId: Int!
}

input UpdateAssignmentInput {
  """ID người dùng được phân công"""
  userId: Int

  """ID chức vụ của assignment"""
  positionId: Int

  """ID đơn vị tổ chức của assignment"""
  unitId: Int
  id: Int!
}

input CreateDepartmentInput {
  """Tên phòng ban"""
  name: String!

  """Mô tả phòng ban"""
  description: String

  """ID phòng ban cha"""
  parentDepartmentId: Int
}

input UpdateDepartmentInput {
  """Tên phòng ban"""
  name: String

  """Mô tả phòng ban"""
  description: String

  """ID phòng ban cha"""
  parentDepartmentId: Int

  """ID phòng ban"""
  id: Int!
}

input RemoveDepartmentInput {
  """ID phòng ban"""
  id: Int!
}

input CreateUserPositionInput {
  userId: Int!
  departmentId: Int!
  positionId: Int!
  startDate: DateTime!
}

"""Dữ liệu đầu vào để tạo workflow action log mới"""
input CreateWorkflowActionLogInput {
  """ID của workflow instance"""
  instanceId: Int!

  """ID của workflow step"""
  stepId: Int!

  """Loại hành động"""
  actionType: ActionType!

  """Ghi chú cho hành động"""
  note: String

  """Metadata bổ sung (JSON string)"""
  metadata: String
}

"""Dữ liệu đầu vào để cập nhật workflow action log"""
input UpdateWorkflowActionLogInput {
  """ID của workflow action log cần cập nhật"""
  id: Int!

  """Ghi chú cho hành động"""
  note: String

  """Metadata bổ sung (JSON string)"""
  metadata: String
}

input CreateWorkflowInstanceInput {
  templateId: Int!
  documentId: Int!
  notes: String
}

input UpdateWorkflowInstanceInput {
  id: Int!
  notes: String
}

input WorkflowActionInput {
  instanceId: Int!
  stepId: Int!
  actionType: ActionType!
  note: String
  metadata: String
}

"""Dữ liệu đầu vào để tạo workflow step mới"""
input CreateWorkflowStepInput {
  """Tên của workflow step"""
  name: String!

  """Mô tả của workflow step"""
  description: String

  """Loại bước trong workflow"""
  type: StepType!

  """Vai trò được gán cho bước này"""
  assignedRole: String!

  """Thứ tự của bước trong workflow"""
  orderNumber: Int!

  """ID của bước tiếp theo"""
  nextStepId: Int

  """Trạng thái kích hoạt"""
  isActive: Boolean = true

  """ID của workflow template"""
  templateId: Int!
}

"""Dữ liệu đầu vào để cập nhật workflow step"""
input UpdateWorkflowStepInput {
  """Tên của workflow step"""
  name: String

  """Mô tả của workflow step"""
  description: String

  """Loại bước trong workflow"""
  type: StepType

  """Vai trò được gán cho bước này"""
  assignedRole: String

  """Thứ tự của bước trong workflow"""
  orderNumber: Int

  """ID của bước tiếp theo"""
  nextStepId: Int

  """Trạng thái kích hoạt"""
  isActive: Boolean = true

  """ID của workflow template"""
  templateId: Int

  """ID của workflow step cần cập nhật"""
  id: Int!
}

"""Dữ liệu đầu vào để tạo workflow template mới"""
input CreateWorkflowTemplateInput {
  """Tên của workflow template"""
  name: String!

  """Mô tả của workflow template"""
  description: String

  """Trạng thái kích hoạt"""
  isActive: Boolean = true
}

"""Dữ liệu đầu vào để cập nhật workflow template"""
input UpdateWorkflowTemplateInput {
  """Tên của workflow template"""
  name: String

  """Mô tả của workflow template"""
  description: String

  """Trạng thái kích hoạt"""
  isActive: Boolean = true

  """ID của workflow template cần cập nhật"""
  id: Int!
}

input CreateDocumentInput {
  title: String!
  content: String
  documentNumber: String
  documentType: DocumentTypeEnum!
  documentCategoryId: Int!
  status: DocumentStatus
  priority: DocumentPriority
  deadline: String
  assignedToUserId: Int
  workflowTemplateId: Int
  fileId: Int
}

input UpdateDocumentInput {
  id: Int!
  title: String
  content: String
  documentNumber: String
  documentType: DocumentTypeEnum
  documentCategoryId: Int
  status: DocumentStatus
  priority: DocumentPriority
  deadline: String
  assignedToUserId: Int
  fileId: Int
}

input DocumentActionInput {
  """ID của document"""
  documentId: Int!

  """Loại action"""
  actionType: ActionType!

  """Ghi chú"""
  notes: String

  """ID user chuyển tiếp (cho TRANSFER action)"""
  transferToUserId: Int
}

input AssignTaskInput {
  documentId: Int!
  assignedToUserId: Int!
  taskDescription: String
  deadline: String
  priority: DocumentPriority
  instructions: String
  notes: String
}

"""Dữ liệu đầu vào để tạo task request mới"""
input CreateTaskRequestInput {
  """ID của người được giao việc"""
  assignedToUserId: Int!

  """Tiêu đề công việc"""
  title: String!

  """Mô tả chi tiết công việc"""
  description: String

  """Mức độ ưu tiên"""
  priority: TaskPriority

  """Deadline (ISO string)"""
  deadline: String

  """Hướng dẫn thực hiện"""
  instructions: String

  """Ghi chú bổ sung"""
  notes: String
}

"""Dữ liệu đầu vào để phê duyệt task request"""
input ApproveTaskRequestInput {
  """ID của task request"""
  taskRequestId: Int!

  """Ghi chú khi phê duyệt"""
  notes: String
}

"""Dữ liệu đầu vào để từ chối task request"""
input RejectTaskRequestInput {
  """ID của task request"""
  taskRequestId: Int!

  """Lý do từ chối"""
  rejectionReason: String!
}

"""Dữ liệu đầu vào để tạo document từ task request"""
input CreateDocumentFromTaskInput {
  """ID của task request"""
  taskRequestId: Int!

  """Tiêu đề văn bản"""
  title: String!

  """Nội dung văn bản"""
  content: String!

  """Danh mục văn bản"""
  category: String

  """Độ ưu tiên"""
  priority: TaskPriority!

  """Ghi chú"""
  notes: String
}

input CreateDocumentCategoryInput {
  """Tên nhóm văn bản"""
  name: String!

  """Mô tả"""
  description: String
}

input UpdateDocumentCategoryInput {
  """Tên nhóm văn bản"""
  name: String

  """Mô tả"""
  description: String
  id: Int!
}

input CreateDocumentTypeInput {
  name: String!
  description: String
}

input UpdateDocumentTypeInput {
  id: Float!
  name: String
  description: String
}